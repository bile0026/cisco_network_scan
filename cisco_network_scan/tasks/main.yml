---
# tasks file for cisco_network_scan

- name: Gather IOS Information
  cisco.ios.ios_facts:
    gather_network_resources: l2_interfaces
  register: ios_result

- name: Find access interfaces
  set_fact:
    access_interfaces: "{{ access_interfaces }} + [ {{ device_interface }} ]"
  loop: "{{ ansible_network_resources.l2_interfaces }}"
  loop_control:
    loop_var: device_interface
  when: device_interface.access is defined

# - debug:
#     msg: "{{ item.name }}"
#   loop: "{{ access_interfaces }}"

- name: Get mac address table for access ports
  cisco.ios.ios_command:
    commands:
      - "show mac address-table interface {{ item.name }}"
  loop: "{{ access_interfaces }}"
  register: mac_address_table_results

# - debug:
#     var: "{{ item.stdout_lines[0] | count }}"
#   loop: "{{ mac_address_table_results.results }}"

- name: Build list of interfaces with too many MAC addresses
  set_fact:
    suspicious_interfaces: "{{ suspicious_interfaces + [ suspicious_interface ] | flatten }}"
  loop: "{{ mac_address_table_results.results }}"
  loop_control:
    loop_var: suspicious_interface
  when: (suspicious_interface.stdout_lines[0] | count) > mac_count

- name: Build list of interface MAC addresses
  set_fact:
    mac_addresses: "{{ mac_addresses + [ mac_line.stdout_lines[0] | regex_search('^.*([a-f0-9]{4}\\.[a-f0-9]{4}\\.[a-f0-9]{4}).*$', '\\1', multiline=True) ] | flatten }}"
  loop: "{{ suspicious_interfaces }}"
  loop_control:
    loop_var: mac_line

- name: Display Suspicious Interfaces
  debug:
    msg: "{{ current_interface.stdout_lines[0] }}"
  loop: "{{ suspicious_interfaces }}"
  loop_control:
    loop_var: current_interface

- name: Generate Report
  ansible.builtin.lineinfile:
    path: ./{{ report_file }}
    create: true
    line: |
      Device: {{ ansible_host }}
      {% for interface in suspicious_interfaces %}
        Interface: {{ interface.item.name }}
            MAC Address      |   VLAN
          ------------------------------------
      {% for line in interface.stdout_lines[0] %}
      {% if line | regex_search('^.*([a-f0-9]{4}\\.[a-f0-9]{4}\\.[a-f0-9]{4}).*$', '\\1') | select('string') | length > 0 %}
            {{ (line | regex_search('^.*([a-f0-9]{4}\.[a-f0-9]{4}\.[a-f0-9]{4}).*$', '\1')  | select('string'))[0] }}   |   {{ (line | regex_search('^ {0,3}([0-9]{1,4}).*$', '\1')  | select('string'))[0] }}
      {# end if line is not empty test #}
      {% endif %}
      {# end for line in interface.stdout_lines[0] #}
      {% endfor %}
      {# end for interfaces in suspicious_interfaces #}
      {% endfor %}
      ================================================================
  when:
    - generate_report
    - suspicious_interfaces | length > 0
  notify:
    - email report
